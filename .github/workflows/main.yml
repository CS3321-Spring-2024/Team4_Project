name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11.8'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 - --version=1.8.2

      - name: Configure Poetry
        run: |
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          poetry install

      - name: Install coverage.py
        run: |
          poetry add coverage --group=dev

      - name: Run tests with coverage
        run: |
          poetry run coverage run -m pytest
          poetry run coverage report
          poetry run coverage lcov

      - name: Check coverage percentage
        uses: VeryGoodOpenSource/very_good_coverage@v1.1.1
        with:
          path: ./coverage.lcov
          min_coverage: 80
          exclude: '**/**/__init__.py tests/**'




  build:
    needs: coverage
    environment: Scratch_Dev
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Build Docker image
        run: |
          docker build -t figureofstick/team4_weather_api:latest .
      
      - name: Login to Docker registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      
      - name: Push Docker image to registry
        run: |
          docker push figureofstick/team4_weather_api:latest
  
  deploy:
    needs: build
    environment: Scratch_Dev
    runs-on: ubuntu-latest
    steps:
      - name: SSH into AWS EC2 instance
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.AWS_EC2_IP_ADDRESS }}
          username: ${{ secrets.AWS_EC2_USER_NAME }}
          password: ${{ secrets.AWS_EC2_DOCKER_SERVICE_PASSWORD }}
          script: |
            
            # Remove old container
            docker stop $(docker ps -q)
            docker rm -vf $(docker ps -q) || true
            # Pull Docker image from registry
            docker pull figureofstick/team4_weather_api:latest
            
            # Run Docker container
            docker run -d -p 80:80 figureofstick/team4_weather_api:latest
            docker ps
